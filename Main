local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Victor_Heimdal Hub",
    Icon = 0,
    LoadingTitle = "Rayfield",
    LoadingSubtitle = "Credit: Sirius",
    Theme = "AmberGlow",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
        Title = "This legendary script needs key",
        Subtitle = "GIMME KEYYYY",
        Note = "Ask the owner nicely for the key",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"ezE","Victor_Heimdal-IsKing","WsbErBÃ¸sse"}
    }
})

local char = game.Players.LocalPlayer.Character
local hum = char.Humanoid
local Tab = Window:CreateTab("Main", 4483362458)
local Tab1 = Window:CreateTab("Misc", 4483362458)
local Section = Tab:CreateSection("Main")

-- Add JumpPower Slider
Tab:CreateSlider({
    Name = "JumpPower",
    Range = {0, 500},
    Increment = 10,
    Suffix = "JumpPower",
    CurrentValue = 10,
    Flag = "Slider1",
    Callback = function(Value)
        hum.JumpPower = Value
    end
})

-- Add WalkSpeed Slider
Tab:CreateSlider({
    Name = "WalkSpeed",
    Range = {0, 500},
    Increment = 10,
    Suffix = "WalkSpeed",
    CurrentValue = 10,
    Flag = "Slider2",
    Callback = function(Value)
        hum.WalkSpeed = Value
    end
})

-- Add NoClip Toggle
Tab:CreateToggle({
    Name = "NoClip",
    CurrentValue = false,
    Flag = "Toggle1215",
    Callback = function(Value)
        game:GetService("RunService").RenderStepped:Connect(function()
            local character = game.Players.LocalPlayer.Character
            if character then
                character.Head.CanCollide = not Value
                character.Torso.CanCollide = not Value
            end
        end)
    end
})

-- Force Remove hacks Button
Tab:CreateButton({
    Name = "Force Remove hacks",
    Callback = function()
        Rayfield:Destroy()
    end
})

-- Chat Input
Tab1:CreateInput({
    Name = "Chat",
    CurrentValue = "",
    PlaceholderText = "Put text here",
    RemoveTextAfterFocusLost = false,
    Flag = "Input231",
    Callback = function(Text)
        local TextChatService = game:GetService("TextChatService")
        TextChatService.TextChannels.RBXGeneral:SendAsync(Text)
    end
})

-- Kick Player Input
Tab1:CreateInput({
    Name = "Kick Player",
    CurrentValue = "",
    PlaceholderText = "Put text here",
    RemoveTextAfterFocusLost = false,
    Flag = "InputKick",
    Callback = function(Text)
        game.Players:WaitForChild(Text):Kick("Your a bitch frfr")
    end
})

-- Health Function Dropdown
Tab:CreateDropdown({
    Name = "Health function",
    Options = {"Faster Regen","Normal Regen","Risky Regen"},
    CurrentOption = {"Normal Regen"},
    MultipleOptions = false,
    Flag = "yoDropdown1",
    Callback = function(Option)
        hum.HealthChanged:Connect(function(health)
            if health < hum.MaxHealth then
                if Option == "Faster Regen" then
                    while wait(0.3) do
                        hum.Health += 5
                    end
                elseif Option == "Normal Regen" then
                    while wait(1) do
                        hum.Health += 5
                    end
                elseif Option == "Risky Regen" then
                    hum.Health += hum.MaxHealth
                end
            end
        end)
    end
})

-- AimBot Section
local IsAimbotOn = false
local HitPart = "Torso"

Tab1:CreateToggle({
    Name = "AimBot (MB2/RightMouseClick)",
    CurrentValue = false,
    Flag = "Toggle5",
    Callback = function(Value)
        IsAimbotOn = Value
    end
})

Tab1:CreateDropdown({
    Name = "AimBotHitPart",
    Options = {"Head", "Torso"},
    CurrentOption = {"Torso"},
    Callback = function(Options)
        HitPart = Options[1]
    end
})

-- Mouse hover over player detection and event firing logic
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local shootEvent = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Shoot")
if shootEvent then
    print("TriggerBot working")
 else
    return nil
end

local UserInputService = game:GetService("UserInputService")
local mouse = game.Players.LocalPlayer:GetMouse()

-- Function to check if mouse is over a player's character
local function isMouseOverCharacter(character)
    local mousePosition = mouse.Hit.p
    local characterPosition = character:WaitForChild("HumanoidRootPart").Position
    local distance = (mousePosition - characterPosition).Magnitude
    return distance < math.Huge  -- If mouse is within 10 studs of the player's character
end

-- Fire the "shoot" event if mouse is over a player
local function tryShootOnPlayer()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local character = player.Character
            if isMouseOverCharacter(character) then
                shootEvent:FireServer(player)  -- Fire the shoot event on the player
            end
        end
    end
end

-- Detect when right mouse button is held
local isHoldingRightClick = false
UserInputService.InputBegan:Connect(function(input, processed)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isHoldingRightClick = true
    end
end)

UserInputService.InputEnded:Connect(function(input, processed)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isHoldingRightClick = false
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if isHoldingRightClick == true then
        tryShootOnPlayer()
    end
end)  -- <-- This `end` closes the RenderStepped connection

-- âœ… ESP Section
local function createESP(player)
    if player == game.Players.LocalPlayer then return end
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end

    local character = player.Character
    local existing = character:FindFirstChild("ESPHighlight")
    if existing then existing:Destroy() end

    -- ðŸŸ© Determine color based on team
    local isTeammate = usesTeams() and player.Team == game.Players.LocalPlayer.Team
    local fillColor = isTeammate and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

    -- ðŸŒˆ Highlight
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESPHighlight"
    highlight.FillColor = fillColor
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.Adornee = character
    highlight.Parent = character

    -- ðŸ§  Name + Distance Label
    local head = character:FindFirstChild("Head")
    if head and not head:FindFirstChild("ESPBillboard") then
        local billboard = Instance.new("BillboardGui", head)
        billboard.Name = "ESPBillboard"
        billboard.AlwaysOnTop = true
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2.5, 0)
        billboard.Adornee = head

        local textLabel = Instance.new("TextLabel", billboard)
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = fillColor
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextStrokeTransparency = 0.5

        game:GetService("RunService").RenderStepped:Connect(function()
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local distance = math.floor((player.Character.HumanoidRootPart.Position - workspace.CurrentCamera.CFrame.Position).Magnitude)
                textLabel.Text = string.format("%s [%dm]", player.Name, distance)
            end
        end)
    end
end

local function removeESP(player)
    if player.Character then
        local highlight = player.Character:FindFirstChild("ESPHighlight")
        if highlight then highlight:Destroy() end

        local head = player.Character:FindFirstChild("Head")
        if head then
            local billboard = head:FindFirstChild("ESPBillboard")
            if billboard then billboard:Destroy() end
        end
    end
end

local function setupCharacterESP(player)
    if player == game.Players.LocalPlayer then return end
    player.CharacterAdded:Connect(function(char)
        char:WaitForChild("HumanoidRootPart", 5)
        wait(0.5)
        if ESPEnabled then createESP(player) end
    end)
end

local function enableESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        createESP(player)
        setupCharacterESP(player)
    end

    game.Players.PlayerAdded:Connect(setupCharacterESP)
end

local function disableESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        removeESP(player)
    end
end

local ESPEnabled = false

Tab1:CreateToggle({
    Name = "Enable ESP",
    CurrentValue = false,
    Flag = "ToggleESP",
    Callback = function(Value)
        ESPEnabled = Value
        if Value then
            enableESP()
        else
            disableESP()
        end
    end
}) 
