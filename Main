local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Victor_Heimdal Hub",
    Icon = 0,
    LoadingTitle = "Rayfield",
    LoadingSubtitle = "Credit: Sirius",
    Theme = "AmberGlow",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },

    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },

    KeySystem = true,
    KeySettings = {
        Title = "This legendary script needs key",
        Subtitle = "GIMME KEYYYY",
        Note = "Ask the owner nicely for the key",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"ezE","Victor_Heimdal-IsKing","WsbErBøsse"}
    }
})

local char = game.Players.LocalPlayer.Character
local hum = char.Humanoid

local Tab = Window:CreateTab("Main", 4483362458)
local Tab1 = Window:CreateTab("Misc", 4483362458)

local Section = Tab:CreateSection("Main")

-- JumpPower Slider
Tab:CreateSlider({
    Name = "JumpPower",
    Range = {0, 500},
    Increment = 10,
    Suffix = "JumpPower",
    CurrentValue = 10,
    Flag = "Slider1",
    Callback = function(Value)
        hum.JumpPower = Value
    end
})

-- WalkSpeed Slider
Tab:CreateSlider({
    Name = "WalkSpeed",
    Range = {0, 500},
    Increment = 10,
    Suffix = "WalkSpeed",
    CurrentValue = 10,
    Flag = "Slider2",
    Callback = function(Value)
        hum.WalkSpeed = Value
    end
})

-- NoClip Toggle
Tab:CreateToggle({
    Name = "NoClip",
    CurrentValue = false,
    Flag = "Toggle1215",
    Callback = function(Value)
        game:GetService("RunService").RenderStepped:Connect(function()
            local character = game.Players.LocalPlayer.Character
            if character then
                character.Head.CanCollide = not Value
                character.Torso.CanCollide = not Value
            end
        end)
    end
})

-- Force Remove hacks Button
Tab:CreateButton({
    Name = "Force Remove hacks",
    Callback = function()
        Rayfield:Destroy()
    end
})

Tab1:CreateSection("Chat")

-- Chat Input
Tab1:CreateInput({
    Name = "Chat",
    CurrentValue = "",
    PlaceholderText = "Put text here",
    RemoveTextAfterFocusLost = false,
    Flag = "Input231",
    Callback = function(Text)
        local TextChatService = game:GetService("TextChatService")
        TextChatService.TextChannels.RBXGeneral:SendAsync(Text)
    end
})

-- Kick Player Input
Tab1:CreateInput({
    Name = "Kick Player",
    CurrentValue = "",
    PlaceholderText = "Put text here",
    RemoveTextAfterFocusLost = false,
    Flag = "InputKick",
    Callback = function(Text)
        game.Players:WaitForChild(Text):Kick("Your a bitch frfr")
    end
})

Tab:CreateSection("Health")

-- Health Function Dropdown
Tab:CreateDropdown({
    Name = "Health function",
    Options = {"Faster Regen","Normal Regen","Risky Regen"},
    CurrentOption = {"Normal Regen"},
    MultipleOptions = false,
    Flag = "yoDropdown1",
    Callback = function(Option)
        hum.HealthChanged:Connect(function(health)
            if health < hum.MaxHealth then
                if Option == "Faster Regen" then
                    while wait(0.3) do
                        hum.Health += 5
                    end
                elseif Option == "Normal Regen" then
                    while wait(1) do
                        hum.Health += 5
                    end
                elseif Option == "Risky Regen" then
                    hum.Health += hum.MaxHealth
                end
            end
        end)
    end
})

local Section4322 = Tab1:CreateSection("AimBot")

local IsAimbotOn = false
local HitPart = "Torso"

Tab1:CreateToggle({
    Name = "AimBot (MB2/RightMouseClick)",
    CurrentValue = false,
    Flag = "Toggle5",
    Callback = function(Value)
        IsAimbotOn = Value
    end
})

Tab1:CreateDropdown({
    Name = "AimBotHitPart",
    Options = {"Head", "Torso"},
    CurrentOption = {"Torso"},
    Callback = function(Options)
        HitPart = Options[1]
    end
})

local function usesTeams()
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Team then return true end
    end
    return false
end

local function isVisible(targetPart)
    local origin = workspace.CurrentCamera.CFrame.Position
    local direction = (targetPart.Position - origin)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {game.Players.LocalPlayer.Character}
    raycastParams.IgnoreWater = true
    local result = workspace:Raycast(origin, direction, raycastParams)
    return result and result.Instance:IsDescendantOf(targetPart.Parent)
end

local function isInFOV(part)
    local screenPoint, onScreen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
    return onScreen
end

local function getNearestPlayerHead()
    local closestDist = math.huge
    local closestHead = nil
    local hasTeams = usesTeams()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild(HitPart) then
            local targetPart = player.Character[HitPart]
            local humanoid = player.Character:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local isEnemy = not hasTeams or player.Team ~= game.Players.LocalPlayer.Team
                if isEnemy and isVisible(targetPart) and isInFOV(targetPart) then
                    local dist = (targetPart.Position - workspace.CurrentCamera.CFrame.Position).Magnitude
                    if dist < closestDist then
                        closestDist = dist
                        closestHead = targetPart
                    end
                end
            end
        end
    end
    return closestHead
end

local UserInputService = game:GetService("UserInputService")
local isHoldingRightClick = false

UserInputService.InputBegan:Connect(function(input, processed)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isHoldingRightClick = true
    end
end)

UserInputService.InputEnded:Connect(function(input, processed)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isHoldingRightClick = false
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if IsAimbotOn and isHoldingRightClick then
        local targetPart = getNearestPlayerHead()
        if targetPart then
            local targetPos = targetPart.Position
            local camPos = workspace.CurrentCamera.CFrame.Position
            workspace.CurrentCamera.CFrame = CFrame.new(camPos, targetPos)
        end
    end
end)

-- ✅ ESP Section
Tab1:CreateSection("ESP")

local function createESP(player)
    if player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        if head:FindFirstChild("ESPLabel") then return end

        local billboard = Instance.new("BillboardGui")
        billboard.Name = "ESPLabel"
        billboard.Size = UDim2.new(0, 100, 0, 40)
        billboard.AlwaysOnTop = true
        billboard.Adornee = head
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.Parent = head

        local text = Instance.new("TextLabel", billboard)
        text.Size = UDim2.new(1, 0, 1, 0)
        text.BackgroundTransparency = 1
        text.Text = player.Name
        text.TextColor3 = Color3.new(1, 0, 0)
        text.TextScaled = true
        text.Font = Enum.Font.SourceSansBold
    end
end

local function removeESP(player)
    if player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        local label = head:FindFirstChild("ESPLabel")
        if label then label:Destroy() end
    end
end

local function enableESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            createESP(player)
        end
    end

    game.Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            wait(1)
            createESP(player)
        end)
    end)

    for _, player in pairs(game.Players:GetPlayers()) do
        player.CharacterAdded:Connect(function()
            wait(1)
            createESP(player)
        end)
    end
end

local function disableESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            removeESP(player)
        end
    end
end

local ESPEnabled = false

Tab1:CreateToggle({
    Name = "Enable ESP",
    CurrentValue = false,
    Flag = "ToggleESP",
    Callback = function(Value)
        ESPEnabled = Value
        if Value then
            enableESP()
        else
            disableESP()
        end
    end
})

Rayfield:LoadConfiguration()
